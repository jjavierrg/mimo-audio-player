name: Publish Docker image and deploy

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Get current date # get the date of the build
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
          VERSION=${{ steps.date.outputs.date }}

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION} --tag ${DOCKER_IMAGE}:latest"

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile ./
            
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Log in to Docker Hub
        if: success() && github.event_name != 'pull_request'
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
      
      - name: Inspect image
        if: always() && github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
          
      - name: Call portainer webhook
        if: success() && github.event_name != 'pull_request'
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          headers: '{"repository": "${{ github.event.repository.name }}"}'
          body: '{"event": "deployment", "repository": "${{ github.event.repository.name }}"}'
